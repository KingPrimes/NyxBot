# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
# optional
name: Build For Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
          - debug
          - info
          - warning
          - error
jobs:
  build-release:
    name: Release
    runs-on: ubuntu-latest
    env:
      EX: ${{ secrets.E}}
      DX: ${{ secrets.D}}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
    steps:
      - name: Get latest tag
        if: inputs.use_latest_tag == 'true'
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v*")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Clone NyxBot-WebUI repository
        run: git clone https://github.com/KingPrimes/NyxBot-WebUI.git

      - name: Build NyxBot-WebUI with pnpm
        working-directory: ./NyxBot-WebUI
        run: |
          pnpm install
          pnpm build

      - name: Merge built resources into current project
        run: |
          mkdir -p src/main/resources/webui
          cp -r NyxBot-WebUI/resources/* src/main/resources/

      - name: Build with Maven
        run: |
          echo "::add-mask::$EX"
          echo "::add-mask::$DX"
          echo "::add-mask::$USERNAME"
          echo "::add-mask::$PASSWORD"
          mvn -B --file pom.xml clean package -Dex="$EX" -Ddx="$DX"
      # 获取Commits信息 并将其存储到 generate_release_notes.outputs.notes 变量中
      - name: Generate release notes
        id: generate_release_notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
          publish: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nyxbot-package
          path: |
            target/NyxBot.jar
            Dockerfile
            docker-compose.yml
      # 将JAR文件上传到GitHub Release
      - name: Upload JAR to Release
        uses: svenstaro/upload-release-action@v2
        with:
          file: target/NyxBot.jar
          tag: ${{ github.ref }}
          draft: true
          release_name: ${{ steps.generate_release_notes.outputs.name }}
          # 设置正文为 release-drafter/release-drafter@v6 步骤中生成的 release notes
          body: ${{ steps.generate_release_notes.outputs.body }}

  build-docker:
    needs: build-release
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: nyxbot-package
          path: .  # 下载到当前目录

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        run: |
          docker build -t kingprimes/nyxbot:latest .
          docker push kingprimes/nyxbot:latest