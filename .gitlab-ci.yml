stages:
  - build
  - docker
  - release

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.maven/repository"
  NODE_VERSION: "22.x"

# 使用极狐GitLab的缓存机制替代GitHub Actions的setup-java缓存
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .maven/repository
    - NyxBot-WebUI/node_modules

build-release:
  stage: build
  image: maven:3.8.6-openjdk-21
  before_script:
    - apt-get update -y && apt-get install -y git
    # 设置Node.js环境
    - curl -fsSL https://deb.nodesource.com/setup_$NODE_VERSION | bash -
    - apt-get install -y nodejs
    - npm install -g pnpm
    # 克隆WebUI仓库
    - git clone https://github.com/KingPrimes/NyxBot-WebUI.git
    # 构建WebUI
    - cd NyxBot-WebUI && pnpm install && pnpm build && cd ..
    # 合并资源文件
    - mkdir -p src/main/resources/webui
    - cp -r NyxBot-WebUI/resources/* src/main/resources/
  script:
    - mvn clean package -DUSERNAME="nyxbot" -DPASSWORD="nyxbot"
  artifacts:
    paths:
      - target/NyxBot.jar
      - Dockerfile
      - docker-compose.yml
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v/ || $CI_PIPELINE_SOURCE == "web"'
  # 极狐GitLab通过CI变量传递敏感信息，无需手动mask
  environment:
    name: production

generate_release_notes:
  stage: release
  needs: ["build-release"]
  image: python:3.9
  script:
    - pip install PyGithub
    - |
      python <<EOF
      from github import Github
      g = Github('$GITHUB_TOKEN')
      repo = g.get_repo("KingPrimes/NyxBot")
      latest_release = repo.get_latest_release()
      with open("release_notes.md", "w") as f:
          f.write(latest_release.body)
      EOF
    - cat release_notes.md
  artifacts:
    paths:
      - release_notes.md
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v/'

create_release:
  stage: release
  needs: ["generate_release_notes"]
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: "$(cat release_notes.md)"
    tag_name: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: "NyxBot.jar"
          url: "${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/file/target/NyxBot.jar"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v/'